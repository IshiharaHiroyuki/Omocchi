components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        アクセストークンをAuthorizationヘッダーに指定してください
        例: `Authorization: Bearer <access_token>`

  schemas:
    # 認証トークン関連
    TokenResponse:
      type: object
      required:
        - access_token
        - refresh_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          description: アクセストークン
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          description: リフレッシュトークン
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        token_type:
          type: string
          description: トークンタイプ
          example: "Bearer"
        expires_in:
          type: integer
          description: アクセストークンの有効期限（秒）
          example: 3600
        user:
          $ref: "./models.yaml#/components/schemas/User"

    # ロールと権限
    Role:
      type: string
      enum:
        - admin
        - content_manager
        - support_agent
        - user
      description: |
        システムで定義されているロール
        - admin: システム管理者（全ての操作が可能）
        - content_manager: コンテンツ管理者（FAQ作成・編集・削除が可能）
        - support_agent: サポート担当者（FAQ閲覧、問合せ対応が可能）
        - user: 一般ユーザー（FAQ閲覧、フィードバック送信が可能）

    Permission:
      type: string
      enum:
        - create:faqs
        - read:faqs
        - update:faqs
        - delete:faqs
        - manage:faqs
        - create:feedback
        - read:feedback
        - manage:categories
        - manage:tags
      description: |
        システムで定義されている権限
        FAQ関連:
        - create:faqs: FAQ作成権限
        - read:faqs: FAQ閲覧権限
        - update:faqs: FAQ更新権限
        - delete:faqs: FAQ削除権限
        - manage:faqs: FAQ全体管理権限
        
        フィードバック関連:
        - create:feedback: フィードバック作成権限
        - read:feedback: フィードバック閲覧権限
        
        分類関連:
        - manage:categories: カテゴリ管理権限
        - manage:tags: タグ管理権限

    # レート制限情報
    RateLimitInfo:
      type: object
      properties:
        limit:
          type: integer
          description: 制限回数
          example: 60
        remaining:
          type: integer
          description: 残り回数
          example: 58
        reset:
          type: integer
          description: 制限リセット時刻（Unix時間）
          example: 1616486400

  parameters:
    # 認証ヘッダー
    AuthHeader:
      name: Authorization
      in: header
      description: Bearer認証トークン
      required: true
      schema:
        type: string
        pattern: '^Bearer [A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.[A-Za-z0-9-_.+/=]*$'